m=mirror
s=synchronization
n=unsynchronized
c=change tracking
r=resynchronization
u=up
d=down
add=add
delete=delete
modify=modify
total=total {0}
total_page=current {0}/ {1} page
title=GP Manage Tool
download=download
upload=upload
message=message
userName=user name
password=password
validate=validate
exchange=exchange
selectAll=select all
set=set
cancel=cancel
ok=ok
port=port
ip=ip
hostname=host name
db_id=database id
role=role
dir=directory name
instance_dir=instance directory
init=init
rollback=rollback
validateing= validateing...
set=set
clean=clean
select_all=select all
title.install=   install   
title.manage=   manage   
title.monitor=   monitor   
query=query
type=type
table_name=table name
refresh = refresh
test=test connection
hostMange.title=host manage
hostMange.desc=host manage is mainly to manage all node servers (including user name, machine display name, internal IP, external IP, etc.) information, including user name, machine display name, IP, etc.)

hostMange.table.hostName=host name
hostMange.table.hostIp=ip
hostMange.table.userName= super user name
hostMange.msg.addHost=add host {0} success!\r\n
hostMange.msg.modifyHost=modify  host {0} success!\r\n
hostMange.msg.delHost=delete host {0} success!\r\n

hostConfigure.title=host configure
hostConfigure.desc=host configuration refers to the setup of the node server system before the GPDB installation
hostConfigure.parameter.configuration =host parameter configuration
hostConfigure.close.services=close services
hostConfigure.close.selinux=close selinux
hostConfigure.close.firewall=close firewall
hostConfigure.modify.hostsFile=modify hosts file
hostConfigure.modify.hostName=modify host name
hostConfigure.modify.sysctl=modify sysctl.conf
hostConfigure.select.hosts=select hosts
hostConfigure.modify.limits=modify limits.conf
hostConfigure.modify.blockdev=blockdev
hostConfigure.modify.nproc=limit for number of user's processes

install.title=master install gpdb
install.desc=Install the database is install GPDB software on the master node servers
install.create.superuser=create super user 
install.create.path=create the installation directory
install.run=run install
install.select.master=select master host

ssh.title=SSH key exchange
ssh.desc=Exchange SSH keys, including:\r\n 1. select node server\r\n 2. validation of the selected node server key exchange\r\n 3. SSH key exchange between selected server nodes and master node
ssh.set.timeout=set timeout(second)
ssh.host.name=node server name
ssh.node.isMaster=is master node
ssh.isExchange=is exchange

install.segment.title=segment install gpdb
install.segment.desc=Install the database is install GPDB software on the segment node servers
install.segment.isInstall=is install
check.title=system check
check.desc=The system check includes:\r\n 1. check the system parameters for the node server\r\n 2. system hard disk check for node server\r\n 3. system network check on node server
check.system.desc=check Node server's system configuration
check.hardware.desc= check node server's hardware device
check.system.anction=check system configuration
check.hardware.anction=check hardware device

initfile.title=configure initialization file
initfile.desc=configure the database instance installation's initialization file
initfile.db.user=create db's name
initfile.db.name =db name
initfile.config.title=configure Gpinitsystem_config file
initfile.port.master=MASTER_PORT
initfile.name.master=MASTER_HOSTNAME
initfile.path.master=MASTER_DIRECTORY
initfile.path.primary=DATA_DIRECTORY
initfile.numb.primary=NUMBER_PRIMARY
initfile.path.mirror=MIRROR_DATA_DIRECTORY
initfile.database.name = database name
initfile.path.data=DATA DIRECTORY
initfile.database.tip=if this value is null,then the gp only have database named 'postgres' 'template0' 'template1' 
envVariable.title=setting environment variable
envVariable.desc=1.setting master node's environment variable\r\n2.setting segment node's environment variable
envVariable.master.param=setting master node's environment variable
envVariable.segment.param=setting segment node's environment variable
hostConfigure.success.closedSeLunux={0} close SeLunux succes!
hostConfigure.fail.closedSeLunux={0} close SeLunux fail! --- {1}
soft.title=denpendency soft
soft.desc=check the system software required to install the database
soft.hostlist=select host
soft.name=soft name
soft.need.version= required version
soft.install.version=install version
soft.check.result=result
soft.result.uninstall=not installed
soft.result.upgrade=upgrade
soft.result.unknow=unknow
soft.result.ok=ok
gp_Name=name
master_host_name=master host name
master_host_ip=master host ip
master_root_pwd=master root password
master_root_name=master root name
gp_port=gp port
gp_user_name=gp user name
gp_user_pwd=gp user password
gp_install_path=gp install path
err_hostname_null=host name is null
err_ip_null=ip is null
err_username_null=user name is null
err_password_null=password is null
err_host_exist=the host already exist
err_host=configure error or Check is install LSB_RELEASE
extendManage_extend=extend
extendManage_extend_title=extend manage--extend
extendManage_extend_desc=expansion is the addition of new resources to existing systems in order to improve performance and increase storage capacity
extendManage_extend_anctionDesc=node init or rollback
extendManage_redistribution_time=set redistribution time
extendManage_redistribution_clearShema=clean temporary database
extendManage_redistribution_title=extend manage--redistribution
extendManage_redistribution_desc=The process of redistributing all data to all database instances after successful node expansion
extendManage_redistribution_table=table name
extendManage_redistribution_level=redistribution level
extendManage_redistribution_result=check result
extendManage_redistribution_querybyname=query by table name
instance.install.title=install instance
instance.install.desc=1.display installation list\n2.monitoring installation process,prompt error information
mirror.numb.error=[ERROR:] the number of mirror is incorrect!
rank.level.error=[ERROR:] the value of rank is incorrect!

path.install.error=GP install path is null!
path.datadir.error=GP data dir is null!
gp.root.error=ip or root user is incorrect or checkout is install LSB_RELEASE!
gp.gpuser.error=ip or gp user is incorrect!
standby.master.error=master  can not as standby!
host.isStandby.error=host is not standby!
error=[ERROR:]{0}
info=[INFO:]{0}
server.root.node=server
server.hostManage.node=host manage
server.configure.node=host configure
server.soft.node=denpendency soft
server.denpendencysoft.node=denpendency soft

install.root.node=gpdb install
install.master.node=master install gpdb
install.ssh.node=exchange SSH key 
install.check.node=system detection
install.segment.node=segmengt node install gpdb

instance.root.node=install instance
instance.initFile.node=configure the initialization file
instance.runInstall.node=run install
instance.variable.node=environment variable

hostConfigure.success.closedSeLunux=[INFO:]{0} close SeLunux succes!
hostConfigure.fail.closedSeLunux=[ERROR:]{0} close SeLunux fail!\n{1}
hostConfigure.success.closeIptables=[INFO:]{0} close iptable succes!
hostConfigure.fail.closeIptables=[ERROR:]{0} close iptable fail\n{1}
hostConfigure.success.hostName =[INFO:]{0} modify hostName success!
hostConfigure.fail.hostName=[ERROR:]{0} modify hostName fail!\n{1}
hostConfigure.success.hosts =[INFO:]{0} modify hosts file success!
hostConfigure.fail.hosts={0} modify hosts file fail! --- {1}
hostConfigure.success.sysctl =[INFO:]{0} modify sysctl.conf file success!
hostConfigure.fail.sysctl=[ERROR:]{0} modify sysctl.conf file fail!\n{1}
hostConfigure.success.limit =[INFO:]{0} modify limits.conf file success!
hostConfigure.fail.limit=[ERROR:]{0} modify limits.conf  file fail!\n{1}
hostConfigure.success.install =[INFO:]{0} install success!
hostConfigure.fail.install=[ERROR:]{0} modify install fail!\n{1}
hostConfigure.create.install = {0} install success!
hostConfigure.fail.install=[ERROR:]{0} modify install fail!\n{1}
hostConfigure.fail.blockdev=[ERROR:]{0} modify bolckdev fail!\n{1}
hostConfigure.success.blockdev=[INFO:]{0} modify bolckdev success!
hostConfigure.fail.nproc=[ERROR:]{0} modify nproc fail!\n{1}
hostConfigure.success.nproc=[INFO:]{0} modify nproc success!

install.create.installpath={0} create install path {1}...
install.success.installpath=[INFO:]{0} create install path  {1} success!
install.create.confpath={0} create configure path {1}...
install.success.confpath=[INFO:]{0} create configure path {1} success!
install.create.user={0} create db user {1}...
install.success.user=[INFO:]{0} create db user {1} success!
install.fail.user=[ERROR:]{0} create db user {1} fail!\n{2}
install.success.gpdb=[INFO:]{0} send gpdb success!
install.fail.gpdb=[ERROR:]{0} send gpdb fail!\n{1}
install.process=master install gpdb...
install.install.segment=segment install gpdb...
install.success=[INFO:]{0} install gpdb success!
install.fail={0} install gpdb fail!\n{1}
install.success.env=[INFO:]setting  environment variable success!
install.fail.env=[ERROR:]setting  environment variable fail!\n{0}
install.success.segment=[INFO:]segment install gpdb success!
install.fail.segment=[ERROR:]segment install gpdb fail!\n{0}
install.create.dataDir=create data dir......
install.success.dataDir=[INFO:]create data dir success!
install.begin.instance=init db......
install.success.instance=[INFO:]init db success!
install.fail.instance=[ERROR:]init db fail!
install.fail.checkenv=[ERROR:]check system fail!{0}
install.success.checkenv=\n[INFO:]check system success!
install.fail.checkhardware=[ERROR:]check hardware fail!{0}
install.success.checkhardware=\n[INFO:]check hardware success!
ssh.verification.host={0} verification completed !  --- {1}
ssh.process.exchangKey=exchange SSH key......
ssh.success.exchangKey=[INFO:]exchange SSH key success!
ssh.fail.exchangKey=[ERROR:]exchange SSH key fail!\n{0}

initFile.process.create= create initFile......
initFile.success.create=[INFO:]create initFile success!
initFile.process.configure=[INFO:]configure init file......
initFile.success.configure=[INFO:]configure init file success!
initFile.fail.configure=[ERROR:]configure init file fail!\n{0}

extendManage_root_node=extend manage
extendManage_extend_node=extend
extendManage_redistribution_node=redistribution
instance.success.createdir=[INFO:]create gp data dir success!
instance.fail.createdir=[ERROR:]create gp data dir fail!\n{0}
instance.fail.install=[ERROR:]init gp fail!\n{0}
instance.success.install=[INFO:]init gp success!

soft.fail.check=[ERROR:]{0} check soft fail!\n{1}
soft.success.check=[INFO:]{0} check soft success!

manage.error.connectiondb=[ERROR:]connection database fail!\n
manage.createexpandfile.success=[INFO:]create configure file sucess!
manage.createexpandfile.error=[ERROR:]create configure file fail\n{0}
segment.expand.success=[INFO:]expand segment success!
segment.expand.error=[ERROR:]expand segment fail!\n{0}
standby.expand.success=[INFO:]\expand standby success!
standby.expand.error=[ERROR:]expand standby fail!\n{0}
mirror.createhostfile.success=[INFO:]create host list file success!
mirror.createhostfile.error=[RROR:]\create host list file fail!\n{0}
mirror.checknumb.error=[ERROR]:fail to got mirror number!\n{0}
miiror.open.success=[INFO:]configure mirror success!
miiror.open.error=[ERROR:]configure mirror fail!\n{0}
rollback.success=[INFO:]rollback success! start gp in 'extend manage--extend'
rollback.error=[ERROR:]rollback fail!\n{0}
reload.success=[INFO:]reload success!\\n
reload.error=[ERROR:]reload fail!\n{0}
update.authority.success=[INFO:]update authority success!
update.authority.error=[ERROR:]update authority fail!\n{0}
table.rank.success=[INFO:]update table {0}'s rank value {1} success!
table.rank.error=[ERROR:]update table {0}'s rank value {1} fail!
redistribution.success=[INFO:]\redistribution success!
redistribution.error=[RROR:]redistribution fail!\n{0}
clean.schema.success=[INFO:]clean schema success!
clean.schema.error=[ERROR:]clean schema fail!\n{0}
gp.start.success=[INFO:]gp start success!
gp.start.error=[ERROR:]gp start fail!\n{0}
gp.stop.success=[INFO:]gp stop success!
gp.stop.error=[ERROR:]gp stop fail!\n{0}
gp.restart.success=[INFO:]gp restart success!
gp.restart.error=[ERROR:]gp restart fail!\n{0}
gp.startmaster.success=[INFO:]\start master success!
gp.startmaster.error=[ERROR:]start master fail!
gp.state.success=[INFO:]check gp state success!
gp.state.error=[RROR:]check gp state fail!\n{0}
segment.state.success=[INFO:]check segment and mirror state success!
segment.state.error=[ERROR:]check segment and mirror state fail!\n{0}
recover.segment.success=[INFO:]recover segment(mirror) success!
recover.segment.error=[ERROR:]recover segment(mirror) fail!\n{0}
repair.segment.success=[INFO:]repair segment(mirror) success!
repair.segment.error=[ERROR:]repair segment(mirror) fail!\n{0}
activateStandby.success=[INFO:change to standby success!
activateStandby.error=[ERROR:]change to standby fail!\n{0}
sync.hosts.success=synchronization hosts file success!
sync.hosts.error=synchronization hosts file fail!\n{0}

reset_defualt_value=restore default value
mirrir_no_error=[ERROR:]the greenplum without mirror!
sync_standby_success=[INFO:]standby synchronization success!
sync_standby_error=[ERROR:]standby synchronization fail!\n{0}
config_param_success=set param {0} success!
config_param_error=set param {0} fail!{1}

system_gpmanage_title=system manage--gp manage
system_gpmanage_desc=start stop and so on
master_ip=MASTER IP
gp_current_user=gp current user
install_path= install path
gp_start=start
gp_stop=stop
gp_start_master=start master
gp_restart=restart
gp_status=state
gpmanage_tip=the tool need connection  Connection permissions,set it at 'system manage--gp manage'

add_mirror_title=HA manage--mirror
add_mirror_desc=add mirror including:\n1.add mirror configuration file\n2.mirror initialization\n3.check mirror status
mirror_sync=sync
mirror_state=mirror status
mirror_data_dir=data dir
add_mirror=add mirror
mirror_sync_check=check mirror sync
mirror_status_check=check mirror status
mirror_exist_error=[ERROR:]mirror already exist!\n

add_standby_title=HA mamage--standby
add_standby_desc=add standby including:\n1.standby initialization\n2.check standby status
standby_hostname=standby hostname
standby_state=standby status
add_standby_desc=configure and add standby
add_standby=add Fstandby
standby_check_desc=check standby sync
standby_check=check
standby_exist_error=[ERROR:]standby already exist!\n
standby_no_exist=[ERROR:]not detected standby!make sure standby exist!

authority_title=security manage--authorities 
authority_desc=database user(role) authority manage
authority_system=system authority
authority_object=object authority
grant=grant
user_name=user name
search=search
database=database
schema=schema
object_type=object type
object_name=object name
privilege_type=privilege type
grantable=grantable

breakdown_title=system manage--breakdown
breakdown_desc=reconstruct segment and mirror,recovery role.
statu_check=check segment and mirror status
check=check
breakdown_reconstruct=reconstruct segment and mirror
reconstruct=reconstruct
breakdown_recovery=recovery segment or mirror role
recovery=recovery
m_s_interchange=master/standby interchange
interchange=interchange

connection_title=system manage--client auth
connection_desc=database client auth(pg_hba.conf)
connection_reload=reload
connection_type=type
connection_method=method

extendManage_seg_numb=each host segment number
extendManage_mirror_type=mirror distribution
rollback_tip=rollback make the database down,star in ' cluster database manage'
extend_fail_error=extend fail, is rollback?

gpmanage_menu_open=open
gpmanage_menu_del=delete
gpmanage_menu_closed=close
gpmanage_menu_add=add
gpmanage_load=loading......
gpmanage_master_test=check master configure......
gpmanage_master_error=master configure is error
gpmanage_gpuser_error=database user configure is error
gpmanage_gp_check=check dabase state
gpmanage_gpcheck_error=gp is not exist
gpmanage_database_connection=connection database
gpmanage_connect_error=connect database fail\r\nplease make sure this host can connection database\r\n(configure pg_hba.conf)
gpmanage_get_configure=get database configure
gpmanage_getconfigure_error=get gp configure fail
gpmanage_master_configure=master configure
gpmanage_standby_configure=check standby configure
gpmanage_seg_configure=check segment configure
gpmanage_mirror_configure=check mirror configure
gpmanage_user_message=get user message
gpmanage_save_configure=save configure
gpmanage_save_error=save configure is error\nplease try again

param_title=system manage--param manage
param_desc= batch setting of database parameters (gpconfig)
param_name=parameter name
master_set_value=master value
segment_set_value=segment value
master_current_value=master current value
segment_current_value=segment current value
min_value=min value
max_value=max value
search_condition=search condition
previous_page=previou page
next_page=next page

user_create_db=usecreatedb
user_super=usesuper
user_catupd=usecatupd
user_valuntil=valuntil
use_config=useconfig
user_del_success=[INFO:]delete user success!
user_del_error=[ERROR:]delete user fail!
user_add_success=[INFO:]add user success!
user_add_error=[ERROR:]add user fail!
user_modify_success=[INFO:]modify user success!
user_modify_error=[ERROR:]modify user fail!

advanced=advanced
configure_correct=configure correct

soft_check=check denpendency soft

verificating=verificating......

database_is_null=database is null!
get_current_value=get current value......
get_current_value_error=get current value fail!
select_param_error=please select parameter
role_value_null={0} is null!
role_value_int={0} must be integer!
role_value_real={0} must be real!

unknown=unknown

add_gp_title=set database
gp_add_dlg_name=database set
gp_add_dlg_title=gp information configure
gp_add_dlg_desc=please input gp message

gp_set_test=check database configure

gp_masterhost_error=gp master host is null
gp_userName_null=gp user name is null
gp_connection_error=connect gp fail,please make sure the user can connect gp
gp_root_error=dba user need master root massage,please check root user or password is currect?

gp_configureName_null=gp configure name is null
gp_configureName_exist=gp configure name is exist
gp_port_null=gp port is null
gp_port_error=gp port is error
gp_pwd_null=database user password is null
gp_set_success=database configure success

database_configure=database set
host_root_configure=master host set