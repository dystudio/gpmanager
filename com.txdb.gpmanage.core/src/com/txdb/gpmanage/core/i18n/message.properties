error=[ERROR:]{0}
info=[INFO:]{0}
unknown.error=unknown error
info.unknown.error=[INFO:] unknown error
server.root.node=server
server.hostManage.node=host manage
server.configure.node=host configure
server.soft.node=denpendency soft
server.denpendencysoft.node=denpendency soft

install.root.node=gpdb install
install.master.node=master install gpdb
install.ssh.node=exchange SSH key 
install.check.node=system detection
install.segment.node=segmengt node install gpdb

instance.root.node=install instance
instance.initFile.node=configure the initialization file
instance.runInstall.node=run install
instance.variable.node=environment variable

hostConfigure.success.closedSeLunux=[INFO:]{0} close SeLunux succes!
hostConfigure.fail.closedSeLunux=[ERROR:]{0} close SeLunux fail!\n{1}
hostConfigure.success.closeIptables=[INFO:]{0} close iptable succes!
hostConfigure.fail.closeIptables=[ERROR:]{0} close iptable fail\n{1}
hostConfigure.success.hostName =[INFO:]{0} modify hostName success!
hostConfigure.fail.hostName=[ERROR:]{0} modify hostName fail!\n{1}
hostConfigure.success.hosts =[INFO:]{0} modify hosts file success!
hostConfigure.fail.hosts={0} modify hosts file fail! --- {1}
hostConfigure.success.sysctl =[INFO:]{0} modify sysctl.conf file success!
hostConfigure.fail.sysctl=[ERROR:]{0} modify sysctl.conf file fail!\n{1}
hostConfigure.success.limit =[INFO:]{0} modify limits.conf file success!
hostConfigure.fail.limit=[ERROR:]{0} modify limits.conf  file fail!\n{1}
hostConfigure.success.install =[INFO:]{0} install success!
hostConfigure.fail.install=[ERROR:]{0} modify install fail!\n{1}
hostConfigure.create.install = {0} install success!
hostConfigure.fail.install=[ERROR:]{0} modify install fail!\n{1}
hostConfigure.fail.blockdev=[ERROR:]{0} modify bolckdev fail!\n{1}
hostConfigure.success.blockdev=[INFO:]{0} modify bolckdev success!
hostConfigure.fail.nproc=[ERROR:]{0} modify nproc fail!\n{1}
hostConfigure.success.nproc=[INFO:]{0} modify nproc success!

install.create.installpath={0} create install path {1}...
install.success.installpath=[INFO:]{0} create install path  {1} success!
install.create.confpath={0} create configure path {1}...
install.success.confpath=[INFO:]{0} create configure path {1} success!
install.create.user={0} create db user {1}...
install.success.user=[INFO:]{0} create db user {1} success!
install.fail.user=[ERROR:]{0} create db user {1} fail!\n{2}
install.success.gpdb=[INFO:]{0} send gpdb success!
install.fail.gpdb=[ERROR:]{0} send gpdb fail!\n{1}
install.process=master install gpdb...
install.install.segment=segment install gpdb...
install.success=[INFO:]{0} install gpdb success!
install.fail={0} install gpdb fail!\n{1}
install.success.env=[INFO:]setting  environment variable success!
install.fail.env=[ERROR:]setting  environment variable fail!\n{0}
install.success.segment=[INFO:]segment install gpdb success!
install.fail.segment=[ERROR:]segment install gpdb fail!\n{0}
install.create.dataDir=create data dir......
install.success.dataDir=[INFO:]create data dir success!
install.begin.instance=init db......
install.success.instance=[INFO:]init db success!
install.fail.instance=[ERROR:]init db fail!
install.fail.checkenv=[ERROR:]check system fail!{0}
install.success.checkenv=\n[INFO:]check system success!
install.fail.checkhardware=[ERROR:]check hardware fail!{0}
install.success.checkhardware=\n[INFO:]check hardware success!
ssh.verification.host={0} verification completed !  --- {1}
ssh.process.exchangKey=exchange SSH key......
ssh.success.exchangKey=[INFO:]exchange SSH key success!
ssh.fail.exchangKey=[ERROR:]exchange SSH key fail!\n{0}

initFile.process.create= create initFile......
initFile.success.create=[INFO:]create initFile success!
initFile.process.configure=[INFO:]configure init file......
initFile.success.configure=[INFO:]configure init file success!
initFile.fail.configure=[ERROR:]configure init file fail!\n{0}

extendManage_root_node=extend manage
extendManage_extend_node=extend
extendManage_redistribution_node=redistribution
instance.success.createdir=[INFO:]create gp data dir success!
instance.fail.createdir=[ERROR:]create gp data dir fail!\n{0}
instance.fail.install=[ERROR:]init gp fail!\n{0}
instance.success.install=[INFO:]init gp success!

soft.fail.check=[ERROR:]{0} check soft fail!\n{1}
soft.success.check=[INFO:]{0} check soft success!

manage.error.connectiondb=[ERROR:]connection database fail!\n
manage.createexpandfile.success=[INFO:]create configure file sucess!
manage.createexpandfile.error=[ERROR:]create configure file fail\n{0}
segment.expand.success=[INFO:]expand segment success!
segment.expand.error=[ERROR:]expand segment fail!\n{0}
standby.expand.success=[INFO:]\expand standby success!
standby.expand.error=[ERROR:]expand standby fail!\n{0}
mirror.createhostfile.success=[INFO:]create host list file success!
mirror.createhostfile.error=[RROR:]\create host list file fail!\n{0}
mirror.checknumb.error=[ERROR]:fail to got mirror number!\n{0}
miiror.open.success=[INFO:]configure mirror success!
miiror.open.error=[ERROR:]configure mirror fail!\n{0}
rollback.success=[INFO:]rollback success! start gp in 'extend manage--extend'
rollback.error=[ERROR:]rollback fail!\n{0}
reload.success=[INFO:]reload success!\\n
reload.error=[ERROR:]reload fail!\n{0}
update.authority.success=[INFO:]update authority success!
update.authority.error=[ERROR:]update authority fail!\n{0}
table.rank.success=[INFO:]update table {0}'s rank value {1} success!
table.rank.error=[ERROR:]update table {0}'s rank value {1} fail!
redistribution.success=[INFO:]\redistribution success!
redistribution.error=[RROR:]redistribution fail!\n{0}
clean.schema.success=[INFO:]clean schema success!
clean.schema.error=[ERROR:]clean schema fail!\n{0}
gp.start.success=[INFO:]gp start success!
gp.start.error=[ERROR:]gp start fail!\n{0}
gp.stop.success=[INFO:]gp stop success!
gp.stop.error=[ERROR:]gp stop fail!\n{0}
gp.restart.success=[INFO:]gp restart success!
gp.restart.error=[ERROR:]gp restart fail!\n{0}
gp.startmaster.success=[INFO:]\start master success!
gp.startmaster.error=[ERROR:]start master fail!
gp.state.success=[INFO:]check gp state success!
gp.state.error=[RROR:]check gp state fail!\n{0}
segment.state.success=[INFO:]check segment and mirror state success!
segment.state.error=[ERROR:]check segment and mirror state fail!\n{0}
recover.segment.success=[INFO:]recover segment(mirror) success!
recover.segment.error=[ERROR:]recover segment(mirror) fail!\n{0}
repair.segment.success=[INFO:]repair segment(mirror) success!
repair.segment.error=[ERROR:]repair segment(mirror) fail!\n{0}
activateStandby.success=[INFO:change to standby success!
activateStandby.error=[ERROR:]change to standby fail!\n{0}
sync.hosts.success=synchronization hosts file success!
sync.hosts.error=synchronization hosts file fail!\n{0}

ha_manage=HA manage
mirror=mirror manage
standby=standby manage
breakdown=breakdown manage
system_manage=system manage
connection_manage=authentication manage
parameter_manage=parameter manage

security_manage=security manage
user_manage=user manage
permission=permission manage
access_manage=access control
 